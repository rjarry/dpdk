v5:

* Helper functions to hide casting proved to be harder than expected.
  Naive casting may even be impossible without breaking strict aliasing
  rules. The only other option would be to use explicit memcpy calls.
* Unnamed union tentative again. As suggested by Tyler (thank you!),
  using an intermediate unnamed struct to carry the alignment produces
  consistent ABI in C and C++.
* Also, Tyler (thank you!) suggested that the fast path area alignment
  size may be incorrect for architectures where the cache line is not 64
  bytes. There will be a 64 bytes hole in the structure at the end of
  the unnamed struct. Use __rte_cache_min_aligned to preserve existing
  alignment.

v4:

* Replaced the unnamed union with helper inline functions.

v3:

* Added __extension__ to the unnamed struct inside the union.
* Fixed C++ header checks.
* Replaced alignas() with an explicit static_assert.
